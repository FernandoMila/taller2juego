/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;

import biblioteca.Ciudad;
<<<<<<< Updated upstream
import javax.swing.ImageIcon;
import logica.Controlador;

/**
 *
 * @author grabe
 */
public class Interfaz extends javax.swing.JFrame {
=======
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.Month;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;

public class Interfaz extends JFrame {

    JLabel labelNombreLugar;
    JLabel labelFechaHora;
    JLabel labelImagen;
    JTextArea areaTexto;
    JLabel labelPuntos;
    JTextField campoNombreDetective;
    JButton botonConfirmarNombre;
    List<JButton> botonesCiudades = new ArrayList<>();
    List<JButton> botonesVisitados = new ArrayList<>();
    Point startPoint;
    Point endPoint;
    Timer animationTimer;
    double currentPosition;

    LocalDateTime fechaHoraActual;
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("EEEE, h a");
    private int puntos = 0;
>>>>>>> Stashed changes

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();

    }

<<<<<<< Updated upstream
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        panelCiudad = new javax.swing.JPanel();
        ciudadActual = new javax.swing.JLabel();
        imagenCiudad = new javax.swing.JLabel();
        panelAcciones = new javax.swing.JPanel();
        viajarCiudades = new javax.swing.JButton();
        listaCiudadesProx = new javax.swing.JButton();
        buscarLugar = new javax.swing.JButton();
        acusarCriminal = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        descripciones = new javax.swing.JTextArea();
        barraNavegacion = new javax.swing.JMenuBar();
        barraJuego = new javax.swing.JMenu();
        creditosJuego = new javax.swing.JMenuItem();
        juegoNuevo = new javax.swing.JMenuItem();
        salirJuego = new javax.swing.JMenuItem();
        barraOpciones = new javax.swing.JMenu();
        sonidoActivacion = new javax.swing.JCheckBoxMenuItem();
        barraCriminales = new javax.swing.JMenu();
=======
        // Crear panel superior
        JPanel panelSuperior = new JPanel(new BorderLayout());
        labelNombreLugar = new JLabel("Palacio", SwingConstants.CENTER);
        labelNombreLugar.setFont(new Font("Serif", Font.BOLD, 24));
        labelFechaHora = new JLabel(fechaHoraActual.format(formatter), SwingConstants.CENTER);
        labelFechaHora.setFont(new Font("Serif", Font.PLAIN, 18));
        labelPuntos = new JLabel("Puntos: 0", SwingConstants.CENTER);
        labelPuntos.setFont(new Font("Serif", Font.BOLD, 18));
        JPanel panelDatos = new JPanel(new GridLayout(1, 2));
        panelDatos.add(labelFechaHora);
        panelDatos.add(labelPuntos);
        panelSuperior.add(labelNombreLugar, BorderLayout.NORTH);
        panelSuperior.add(panelDatos, BorderLayout.CENTER);

        // Crear panel central con GridLayout
        JPanel panelCentral = new JPanel(new GridLayout(1, 2));
        JPanel panelImagenDescripcion = new JPanel(new GridLayout(1, 2));
        labelImagen = new JLabel(new ImageIcon("imagenes/ciudades/Palacio.jpeg"), SwingConstants.CENTER);
        labelImagen.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        areaTexto = new JTextArea("En una zona alta del barrio La Aguada, se destaca el edificio Palacio Legislativo, sede del poder legislativo del estado uruguayo. Este edificio emblemático e hito urbano por excelencia, se inaugura el 25 de agosto de 1925, coincidiendo con los festejos del centenario de la Declaratoria de la Independencia del Uruguay.");
        areaTexto.setLineWrap(true);
        areaTexto.setWrapStyleWord(true);
        areaTexto.setEditable(false);
        areaTexto.setFont(new Font("Serif", Font.PLAIN, 20));
        areaTexto.setForeground(Color.BLUE);
        JScrollPane scrollPane = new JScrollPane(areaTexto);
        panelImagenDescripcion.add(labelImagen);
        panelImagenDescripcion.add(scrollPane);
        panelCentral.add(panelImagenDescripcion);

        // Crear panel para el campo de nombre y botón
        JPanel panelNombreDetective = new JPanel(new FlowLayout(FlowLayout.CENTER));
        panelNombreDetective.setBorder(BorderFactory.createTitledBorder("Identificación del Detective"));
        campoNombreDetective = new JTextField(20);
        botonConfirmarNombre = new JButton("Confirmar");
        botonConfirmarNombre.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String nombreDetective = campoNombreDetective.getText().trim();
                if (!nombreDetective.isEmpty()) {
                    guardarNombreDetective(nombreDetective);
                }
            }
        });
        panelNombreDetective.add(new JLabel("Detective, por favor identifíquese:"));
        panelNombreDetective.add(campoNombreDetective);
        panelNombreDetective.add(botonConfirmarNombre);
>>>>>>> Stashed changes

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        javax.swing.GroupLayout panelCiudadLayout = new javax.swing.GroupLayout(panelCiudad);
        panelCiudad.setLayout(panelCiudadLayout);
        panelCiudadLayout.setHorizontalGroup(
            panelCiudadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCiudadLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(panelCiudadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ciudadActual, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imagenCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        panelCiudadLayout.setVerticalGroup(
            panelCiudadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCiudadLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ciudadActual, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imagenCiudad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        viajarCiudades.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        viajarCiudades.setIcon(new javax.swing.ImageIcon("C:\\Users\\grabe\\OneDrive\\Documentos\\GitHub\\taller2juego\\imagenes\\Botones\\Avion.png")); // NOI18N
        viajarCiudades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viajarCiudadesActionPerformed(evt);
            }
        });

<<<<<<< Updated upstream
        listaCiudadesProx.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        listaCiudadesProx.setIcon(new javax.swing.ImageIcon("C:\\Users\\grabe\\OneDrive\\Documentos\\GitHub\\taller2juego\\imagenes\\Botones\\Ciudades.jpg")); // NOI18N
        listaCiudadesProx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaCiudadesProxActionPerformed(evt);
=======
        // Añadir acción al botón "Mapa"
        botonMapa.addActionListener(e -> mostrarMapa());
        
        botonVisitar.addActionListener(e -> mostrarLugares());

        // Añadir paneles a la ventana
        setLayout(new BorderLayout());
        add(panelSuperior, BorderLayout.NORTH);
        add(panelCentral, BorderLayout.CENTER);
        add(panelNombreDetective, BorderLayout.SOUTH);
        add(panelInferior, BorderLayout.SOUTH);

        actualizarFechaHora();
        // Hacer visible la ventana
        setVisible(true);
    }

    private void actualizarFechaHora() {
        labelFechaHora.setText(fechaHoraActual.format(formatter));
    }

    private JMenuBar createMenuBar() {
        JMenuBar menuBar = new JMenuBar();

        JMenu menuJuego = new JMenu("Juego");
        JMenuItem itemCreditos = new JMenuItem("Créditos");
        JMenuItem itemRanking = new JMenuItem("Ranking");
        JMenuItem itemNuevoJuego = new JMenuItem("Nuevo Juego");
        menuJuego.add(itemCreditos);
        menuJuego.add(itemRanking);
        menuJuego.add(itemNuevoJuego);
        menuBar.add(menuJuego);

        JMenu menuOpciones = new JMenu("Opciones");
        JCheckBoxMenuItem itemSonido = new JCheckBoxMenuItem("Sonido", true);
        itemSonido.addActionListener(e -> Sonidos.toggleSonido(itemSonido.isSelected()));
        menuOpciones.add(itemSonido);
        menuBar.add(menuOpciones);

        JMenu menuSalir = new JMenu("Salir");
        JMenuItem itemSalir = new JMenuItem("Salir");
        itemSalir.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int respuesta = JOptionPane.showConfirmDialog(
                        null,
                        "¿Está seguro de que desea salir?",
                        "Confirmar salida",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE
                );
                if (respuesta == JOptionPane.YES_OPTION) {
                    System.exit(0);
                }
>>>>>>> Stashed changes
            }
        });

<<<<<<< Updated upstream
        buscarLugar.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        buscarLugar.setIcon(new javax.swing.ImageIcon("C:\\Users\\grabe\\OneDrive\\Documentos\\GitHub\\taller2juego\\imagenes\\Botones\\BuscarCiudades.jpg")); // NOI18N
=======
        // Añadir acción al botón "Ranking"
        itemRanking.addActionListener(e -> mostrarRanking());

        return menuBar;
    }
>>>>>>> Stashed changes

        acusarCriminal.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        acusarCriminal.setIcon(new javax.swing.ImageIcon("C:\\Users\\grabe\\OneDrive\\Documentos\\GitHub\\taller2juego\\imagenes\\Botones\\Criminal.jpg")); // NOI18N

        descripciones.setEditable(false);
        descripciones.setBackground(new java.awt.Color(204, 204, 204));
        descripciones.setColumns(20);
        descripciones.setLineWrap(true);
        descripciones.setRows(5);
        descripciones.setWrapStyleWord(true);
        descripciones.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        descripciones.setFocusable(false);
        jScrollPane1.setViewportView(descripciones);

<<<<<<< Updated upstream
        javax.swing.GroupLayout panelAccionesLayout = new javax.swing.GroupLayout(panelAcciones);
        panelAcciones.setLayout(panelAccionesLayout);
        panelAccionesLayout.setHorizontalGroup(
            panelAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAccionesLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(listaCiudadesProx, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viajarCiudades, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buscarLugar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(acusarCriminal, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAccionesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        panelAccionesLayout.setVerticalGroup(
            panelAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAccionesLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(panelAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(listaCiudadesProx, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(viajarCiudades, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buscarLugar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(acusarCriminal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
=======
    private void mostrarRanking() {
        // Crear y mostrar la ventana de ranking usando RankingVista
        SwingUtilities.invokeLater(() -> {
            RankingVista rankingVista = new RankingVista();
            rankingVista.setVisible(true);
        });
    }

    void mostrarCiudad(Ciudad ciudad) {
        labelNombreLugar.setText(ciudad.getNombre());
        areaTexto.setText(ciudad.getDescripcion());
        labelImagen.setIcon(new ImageIcon(ciudad.getRutaImagen())); // Cambia getImagenRuta() por getRutaImagen()
>>>>>>> Stashed changes

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelAcciones, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelAcciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelCiudad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        barraJuego.setText("Juego");

        creditosJuego.setText("Creditos");
        barraJuego.add(creditosJuego);

        juegoNuevo.setText("Nuevo Juego");
        juegoNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                juegoNuevoActionPerformed(evt);
            }
        });
        barraJuego.add(juegoNuevo);

        salirJuego.setText("Salir");
        barraJuego.add(salirJuego);

        barraNavegacion.add(barraJuego);

        barraOpciones.setText("Opciones");

        sonidoActivacion.setSelected(true);
        sonidoActivacion.setText("Sonido");
        barraOpciones.add(sonidoActivacion);

        barraNavegacion.add(barraOpciones);

        barraCriminales.setText("Criminales");
        barraCriminales.setEnabled(false);
        barraNavegacion.add(barraCriminales);

        setJMenuBar(barraNavegacion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viajarCiudadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viajarCiudadesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_viajarCiudadesActionPerformed

    private void listaCiudadesProxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaCiudadesProxActionPerformed
        // TODO add your handling code here:
        MostrarMapa m = new MostrarMapa();
        m.setVisible(true);
    }//GEN-LAST:event_listaCiudadesProxActionPerformed

    private void juegoNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_juegoNuevoActionPerformed
        Ciudad c = new Ciudad();
        c = new Controlador().seleccionarCiudad(1);
        ciudadActual.setText(c.getNombre());
        descripciones.setText(c.getDescripcion());
        ImageIcon icon = new ImageIcon("imagenes/"+ c.getImagen());
        imagenCiudad.setIcon(icon);
        // TODO add your handling code here:
    }//GEN-LAST:event_juegoNuevoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

<<<<<<< Updated upstream
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acusarCriminal;
    private javax.swing.JMenu barraCriminales;
    private javax.swing.JMenu barraJuego;
    private javax.swing.JMenuBar barraNavegacion;
    private javax.swing.JMenu barraOpciones;
    private javax.swing.JButton buscarLugar;
    private javax.swing.JLabel ciudadActual;
    private javax.swing.JMenuItem creditosJuego;
    private javax.swing.JTextArea descripciones;
    private javax.swing.JLabel imagenCiudad;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem juegoNuevo;
    private javax.swing.JButton listaCiudadesProx;
    private javax.swing.JPanel panelAcciones;
    private javax.swing.JPanel panelCiudad;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JMenuItem salirJuego;
    private javax.swing.JCheckBoxMenuItem sonidoActivacion;
    private javax.swing.JButton viajarCiudades;
    // End of variables declaration//GEN-END:variables
=======
        endPoint = new Point(ciudad.getX(), ciudad.getY());
        currentPosition = 0.0;
        if (animationTimer != null) {
            animationTimer.stop();
        }
        animationTimer = new Timer(20, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                currentPosition += 0.02;
                if (currentPosition > 1) {
                    animationTimer.stop();
                    currentPosition = 1;
                }
                int x = (int) (startPoint.x + (endPoint.x - startPoint.x) * currentPosition);
                int y = (int) (startPoint.y + (endPoint.y - startPoint.y) * currentPosition);
                // Actualiza la posición del botón aquí
            }
        });
        animationTimer.start();
    }

    private void guardarNombreDetective(String nombre) {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("ranking.txt", true))) {
            writer.write(nombre + " - Puntaje: 0");
            writer.newLine();
            JOptionPane.showMessageDialog(this, "Nombre del detective guardado.");
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al guardar el nombre del detective.");
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new Interfaz());
    }

    private void mostrarLugares() {
        Lugares l = new Lugares(1);
        l.setVisible(true);  
    }
>>>>>>> Stashed changes
}
